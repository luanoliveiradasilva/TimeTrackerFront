user nginx;

worker_processes    auto;

events { 
    worker_connections 1024;
}

http {
    sendfile on;

    server {
        listen 80;

        root    /usr/share/nginx/html;
        
        include /etc/nginx/mime.types;

        # Configuração do frontend
        location / {
            # serve static frontend first  
           try_files $uri $uri/ /index.html;
        }

        # Configuração para o backend API        
        location /dotnet-api {
            # proxy_pass         http://app;  URL do backend .NET
            proxy_pass         http://localhost:57420; 
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            add_header 'Access-Control-Max-Age' 3600;
            if ($request_method = 'OPTIONS') {
                return 204;  # No Content for OPTIONS requests (preflight)
            }
        }

        error_page 404 /50x.html;
    }
}
